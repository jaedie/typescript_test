[{"/Users/jameslee/Desktop/Develop/react-quiz/src/index.tsx":"1","/Users/jameslee/Desktop/Develop/react-quiz/src/App.tsx":"2","/Users/jameslee/Desktop/Develop/react-quiz/src/API.ts":"3","/Users/jameslee/Desktop/Develop/react-quiz/src/utils.ts":"4","/Users/jameslee/Desktop/Develop/react-quiz/src/components/Questioncards.tsx":"5"},{"size":199,"mtime":1610076599824,"results":"6","hashOfConfig":"7"},{"size":2205,"mtime":1610186371606,"results":"8","hashOfConfig":"7"},{"size":840,"mtime":1610182889164,"results":"9","hashOfConfig":"7"},{"size":92,"mtime":1610093049584,"results":"10","hashOfConfig":"7"},{"size":734,"mtime":1610182960932,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rz4cxq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/jameslee/Desktop/Develop/react-quiz/src/index.tsx",[],["24","25"],"/Users/jameslee/Desktop/Develop/react-quiz/src/App.tsx",["26"],"/Users/jameslee/Desktop/Develop/react-quiz/src/API.ts",["27"],"import QuestionCards from \"./components/Questioncards\";\nimport { shuffleArray } from \"./utils\";\n\nexport type Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answers: string[];\n  question: string;\n  type: string;\n};\n\nexport type QuestionState = Question & { answer: string[] };\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\",\n}\n\nexport const fetchQuizQuestions = async (\n  amount: number,\n  difficulty: Difficulty\n) => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n  const data = await (await fetch(endpoint)).json();\n  return data.results.map((question: Question) => ({\n    ...question,\n    answer: shuffleArray([\n      ...question.incorrect_answers,\n      question.correct_answer,\n    ]),\n  }));\n};\n","/Users/jameslee/Desktop/Develop/react-quiz/src/utils.ts",[],"/Users/jameslee/Desktop/Develop/react-quiz/src/components/Questioncards.tsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":20,"column":10,"nodeType":"34","messageId":"35","endLine":20,"endColumn":15},{"ruleId":"32","severity":1,"message":"36","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":21},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar","'QuestionCards' is defined but never used.","no-global-assign","no-unsafe-negation"]